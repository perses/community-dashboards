apiVersion: perses.dev/v1alpha1
kind: PersesDashboard
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: thanos-receive-overview
    app.kubernetes.io/name: perses-dashboard
    app.kubernetes.io/part-of: perses-operator
  name: thanos-receive-overview
  namespace: perses-dev
spec:
  config:
    display:
      name: Thanos / Receive / Overview
    duration: 1h
    layouts:
    - kind: Grid
      spec:
        display:
          title: Remote Write v1 - Incoming Requests
        items:
        - content:
            $ref: '#/spec/panels/0_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/0_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/0_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Remote Write v1 - Incoming Requests (tenanted)
        items:
        - content:
            $ref: '#/spec/panels/1_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/1_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/1_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Remote Write v1 - HTTP Requests
        items:
        - content:
            $ref: '#/spec/panels/2_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/2_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/2_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Series and Samples (tenanted)
        items:
        - content:
            $ref: '#/spec/panels/3_0'
          height: 6
          width: 6
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/3_1'
          height: 6
          width: 6
          x: 6
          "y": 0
        - content:
            $ref: '#/spec/panels/3_2'
          height: 6
          width: 6
          x: 12
          "y": 0
        - content:
            $ref: '#/spec/panels/3_3'
          height: 6
          width: 6
          x: 18
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Remote Write Replication
        items:
        - content:
            $ref: '#/spec/panels/4_0'
          height: 8
          width: 12
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/4_1'
          height: 8
          width: 12
          x: 12
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Remote Write Forward
        items:
        - content:
            $ref: '#/spec/panels/5_0'
          height: 8
          width: 12
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/5_1'
          height: 8
          width: 12
          x: 12
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Write gRPC Unary (WritableStore)
        items:
        - content:
            $ref: '#/spec/panels/6_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/6_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/6_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Read gRPC Unary (StoreAPI Info/Labels)
        items:
        - content:
            $ref: '#/spec/panels/7_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/7_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/7_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Read gRPC Stream (StoreAPI Series/Exemplars)
        items:
        - content:
            $ref: '#/spec/panels/8_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/8_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/8_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Last Bucket Upload
        items:
        - content:
            $ref: '#/spec/panels/9_0'
          height: 6
          width: 24
          x: 0
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Storage
        items:
        - content:
            $ref: '#/spec/panels/10_0'
          height: 8
          width: 8
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/10_1'
          height: 8
          width: 8
          x: 8
          "y": 0
        - content:
            $ref: '#/spec/panels/10_2'
          height: 8
          width: 8
          x: 16
          "y": 0
    - kind: Grid
      spec:
        display:
          title: Resources
        items:
        - content:
            $ref: '#/spec/panels/11_0'
          height: 8
          width: 6
          x: 0
          "y": 0
        - content:
            $ref: '#/spec/panels/11_1'
          height: 8
          width: 6
          x: 6
          "y": 0
        - content:
            $ref: '#/spec/panels/11_2'
          height: 8
          width: 6
          x: 12
          "y": 0
        - content:
            $ref: '#/spec/panels/11_3'
          height: 8
          width: 6
          x: 18
          "y": 0
    panels:
      "0_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of incoming Remote Write v1 requests.
            name: Remote Write Rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, handler, code) (
                      rate(http_requests_total{handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval])
                    )
                  seriesNameFormat: '{{job}} {{namespace}} {{handler}} {{code}}'
      "0_1":
        kind: Panel
        spec:
          display:
            description: Shows percentage of errors for incoming Remote Write v1 requests.
            name: Remote Write Errors
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: percent
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      (
                          sum by (namespace, job, code) (
                            rate(
                              http_requests_total{code=~"5..",handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval]
                            )
                          )
                        / ignoring (code) group_left ()
                          sum by (namespace, job) (
                            rate(http_requests_total{handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval])
                          )
                      )
                    *
                      100
                  seriesNameFormat: '{{job}} {{namespace}} {{code}} {{handler}}'
      "0_2":
        kind: Panel
        spec:
          display:
            description: Duration percentiles of successful Remote Write requests.
            name: Remote Write Duration
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.5,
                      sum by (namespace, job, le) (
                        rate(
                          http_request_duration_seconds_bucket{handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p50 {{job}} - {{namespace}} duration
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.9,
                      sum by (namespace, job, le) (
                        rate(
                          http_request_duration_seconds_bucket{handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p90 {{job}} - {{namespace}} duration
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.99,
                      sum by (namespace, job, le) (
                        rate(
                          http_request_duration_seconds_bucket{handler="receive",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p99 {{job}} {{namespace}} duration
      "1_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of incoming Remote Write v1 requests split by tenant.
            name: Remote Write Rate by tenant
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (tenant, job, handler, code) (
                      rate(
                        http_requests_total{handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{tenant}} {{code}} {{job}} {{namespace}} {{handler}}'
      "1_1":
        kind: Panel
        spec:
          display:
            description: Shows percentage of errors for incoming Remote Write v1 requests split by tenant.
            name: Remote Write Errors by tenant
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: percent
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      (
                          sum by (tenant, namespace, job, code) (
                            rate(
                              http_requests_total{code!~"2..",handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                            )
                          )
                        / ignoring (code) group_left ()
                          sum by (tenant, namespace, job) (
                            rate(
                              http_requests_total{handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                            )
                          )
                      )
                    *
                      100
                  seriesNameFormat: '{{tenant}} {{code}} {{job}} {{namespace}}'
      "1_2":
        kind: Panel
        spec:
          display:
            description: Average duration of Remote Write requests by tenants.
            name: Average Remote Write Duration by tenant
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, tenant) (
                        rate(
                          http_request_duration_seconds_sum{handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                        )
                      )
                    /
                      sum by (namespace, job, tenant) (
                        http_request_duration_seconds_count{handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}
                      )
                  seriesNameFormat: '{{tenant}} {{namespace}} {{job}}'
      "2_0":
        kind: Panel
        spec:
          display:
            description: Shows average size of successful remote write request.
            name: Average Successful Remote Write request size
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: bytes
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, tenant) (
                        rate(
                          http_request_size_bytes_sum{code=~"2..",handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                        )
                      )
                    /
                      sum by (namespace, job, tenant) (
                        rate(
                          http_request_size_bytes_count{code=~"2..",handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                        )
                      )
                  seriesNameFormat: '{{tenant}}'
      "2_1":
        kind: Panel
        spec:
          display:
            description: Shows average size of failed remote write request.
            name: Average Failed Remote Write request size
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: bytes
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, tenant) (
                        rate(
                          http_request_size_bytes_sum{code!~"2..",handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                        )
                      )
                    /
                      sum by (namespace, job, tenant) (
                        rate(
                          http_request_size_bytes_count{code!~"2..",handler="receive",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                        )
                      )
                  seriesNameFormat: '{{tenant}}'
      "2_2":
        kind: Panel
        spec:
          display:
            description: Shows inflight remote write HTTP requests.
            name: Inflight remote write requests
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: decimal
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, tenant, method) (
                      http_inflight_requests{handler="receive",job=~"$job",namespace="$namespace",tenant=~"tenant"}
                    )
                  seriesNameFormat: '{{method}} {{tenant}}'
      "3_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of timeseries ingested by Receive, split by tenant.
            name: Rate of Series ingested
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, tenant) (
                      rate(
                        thanos_receive_write_timeseries_sum{code=~"2..",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{tenant}}'
      "3_1":
        kind: Panel
        spec:
          display:
            description: Shows rate of timeseries not ingested by Receive, split by tenant.
            name: Rate of Series not ingested
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, tenant) (
                      rate(
                        thanos_receive_write_timeseries_sum{code!~"2..",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{tenant}}'
      "3_2":
        kind: Panel
        spec:
          display:
            description: Shows rate of samples ingested by Receive, split by tenant.
            name: Rate of Samples ingested
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, tenant) (
                      rate(
                        thanos_receive_write_samples_sum{code=~"2..",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{tenant}}'
      "3_3":
        kind: Panel
        spec:
          display:
            description: Shows rate of samples not ingested by Receive, split by tenant.
            name: Rate of Samples not ingested
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, tenant) (
                      rate(
                        thanos_receive_write_samples_sum{code!~"2..",job=~"$job",namespace="$namespace",tenant=~"$tenant"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{tenant}}'
      "4_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of replication requests between Receives.
            name: Rate of replication requests
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job) (
                      rate(thanos_receive_replications_total{job=~"$job",namespace="$namespace"}[$__rate_interval])
                    )
                  seriesNameFormat: '{{job}}'
      "4_1":
        kind: Panel
        spec:
          display:
            description: Shows rate of replication errors between Receives.
            name: Rate of replication errors
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job) (
                      rate(
                        thanos_receive_replications_total{job=~"$job",namespace="$namespace",result="error"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{job}}'
      "5_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of forward requests between Receives.
            name: Rate of forward requests
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job) (
                      rate(thanos_receive_forward_requests_total{job=~"$job",namespace="$namespace"}[$__rate_interval])
                    )
                  seriesNameFormat: '{{job}}'
      "5_1":
        kind: Panel
        spec:
          display:
            description: Shows rate of forward errors between Receives.
            name: Rate of forward errors
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: list
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job) (
                      rate(
                        thanos_receive_forward_requests_total{job=~"$job",namespace="$namespace",result="error"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{job}}'
      "6_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of handled Unary gRPC Write requests (WritableStore).
            name: Unary gRPC Write request rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, grpc_method, grpc_code) (
                      rate(
                        grpc_server_handled_total{grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "6_1":
        kind: Panel
        spec:
          display:
            description: Shows percentage of errors of Unary gRPC Write requests (WritableStore).
            name: Unary gRPC Write error rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: percent
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, grpc_code) (
                        rate(
                          grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss",grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    / ignoring (grpc_code) group_left ()
                      sum by (namespace, job) (
                        rate(
                          grpc_server_handled_total{grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "6_2":
        kind: Panel
        spec:
          display:
            description: Shows duration percentiles of handled Unary gRPC Write requests (WritableStore).
            name: Unary gRPC Write duration
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.5,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p50 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.9,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p90 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.99,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p99 {{namespace}} {{job}}
      "7_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of handled Unary gRPC Read requests (StoreAPI).
            name: Unary gRPC Read request rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, grpc_method, grpc_code) (
                      rate(
                        grpc_server_handled_total{grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "7_1":
        kind: Panel
        spec:
          display:
            description: Shows percentage of errors of Unary gRPC Read requests (StoreAPI).
            name: Unary gRPC Read error rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: percent
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, grpc_code) (
                        rate(
                          grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss",grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    / ignoring (grpc_code) group_left ()
                      sum by (namespace, job) (
                        rate(
                          grpc_server_handled_total{grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "7_2":
        kind: Panel
        spec:
          display:
            description: Shows duration percentiles of handled Unary gRPC Read requests (StoreAPI).
            name: Unary gRPC Read duration
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.5,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p50 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.9,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p90 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.99,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_method!="RemoteWrite",grpc_type="unary",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p99 {{namespace}} {{job}}
      "8_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of handled Stream gRPC Read requests (StoreAPI Series/Exemplar calls).
            name: Stream gRPC Read request rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: requests/sec
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job, grpc_method, grpc_code) (
                      rate(
                        grpc_server_handled_total{grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                      )
                    )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "8_1":
        kind: Panel
        spec:
          display:
            description: Shows percentage of errors of Stream gRPC Read requests (StoreAPI Series/Exemplar calls).
            name: Stream gRPC Read error rate
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 1
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
                stack: all
              yAxis:
                format:
                  unit: percent
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      sum by (namespace, job, grpc_code) (
                        rate(
                          grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss",grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    / ignoring (grpc_code) group_left ()
                      sum by (namespace, job) (
                        rate(
                          grpc_server_handled_total{grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                  seriesNameFormat: '{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}'
      "8_2":
        kind: Panel
        spec:
          display:
            description: Shows duration percentiles of handled Stream gRPC Read requests (StoreAPI Series/Exemplar calls).
            name: Stream gRPC Read duration
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.5,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p50 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.9,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p90 {{namespace}} {{job}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    histogram_quantile(
                      0.99,
                      sum by (namespace, job, le) (
                        rate(
                          grpc_server_handling_seconds_bucket{grpc_type="server_stream",job=~"$job",namespace="$namespace"}[$__rate_interval]
                        )
                      )
                    )
                  seriesNameFormat: p99 {{namespace}} {{job}}
      "9_0":
        kind: Panel
        spec:
          display:
            description: Shows the last uploaded block time for Receive.
            name: Last Uploaded Block
          plugin:
            kind: Table
            spec:
              columnSettings:
              - header: Job
                name: job
              - header: Bucket
                name: bucket
              - header: Namespace
                name: namespace
              - header: Uploaded Ago
                name: value
              - hide: true
                name: timestamp
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |2-
                      time()
                    -
                      max by (namespace, job, bucket) (
                        thanos_objstore_bucket_last_successful_upload_time{job=~"$job",namespace="$namespace"}
                      )
      "10_0":
        kind: Panel
        spec:
          display:
            description: Shows rate of samples appended to Receive TSDB across all tenants.
            name: Appended Samples
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: |-
                    sum by (namespace, job) (
                      rate(prometheus_tsdb_head_samples_appended_total{job=~"$job",namespace=~"$namespace"}[$__rate_interval])
                    )
                  seriesNameFormat: '{{job}} - {{namespace}}'
      "10_1":
        kind: Panel
        spec:
          display:
            description: Shows number of series in Receive TSDB head across all tenants.
            name: Head Series
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: sum by (namespace, job) (prometheus_tsdb_head_series{job=~"$job",namespace=~"$namespace"})
                  seriesNameFormat: '{{job}} - {{namespace}} - Head Series'
      "10_2":
        kind: Panel
        spec:
          display:
            description: Shows number of chunks in Prometheus TSDB head across all tenants.
            name: Head Chunks
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: sum by (namespace, job) (prometheus_tsdb_head_chunks{job=~"$job",namespace=~"$namespace"})
                  seriesNameFormat: '{{job}} - {{namespace}} - Head Chunks'
      "11_0":
        kind: Panel
        spec:
          display:
            description: Shows the CPU usage of the component.
            name: CPU Usage
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
                values:
                - last
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: decimal
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: rate(process_cpu_seconds_total{job=~"$job",namespace="$namespace"}[$__rate_interval])
                  seriesNameFormat: '{{pod}}'
      "11_1":
        kind: Panel
        spec:
          display:
            description: Shows various memory usage metrics of the component.
            name: Memory Usage
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
                values:
                - last
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: bytes
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_memstats_alloc_bytes{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: Alloc All {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_memstats_heap_alloc_bytes{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: Alloc Heap {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: rate(go_memstats_alloc_bytes_total{job=~"$job",namespace="$namespace"}[$__rate_interval])
                  seriesNameFormat: Alloc Rate All {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: rate(go_memstats_heap_alloc_bytes{job=~"$job",namespace="$namespace"}[$__rate_interval])
                  seriesNameFormat: Alloc Rate Heap {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_memstats_stack_inuse_bytes{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: Inuse Stack {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_memstats_heap_inuse_bytes{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: Inuse Heap {{pod}}
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: process_resident_memory_bytes{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: Resident Memory {{pod}}
      "11_2":
        kind: Panel
        spec:
          display:
            description: Shows the number of goroutines being used by the component.
            name: Goroutines
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
                values:
                - last
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: decimal
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_goroutines{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: '{{pod}}'
      "11_3":
        kind: Panel
        spec:
          display:
            description: Shows the Go garbage collection pause durations for the component.
            name: GC Duration
          plugin:
            kind: TimeSeriesChart
            spec:
              legend:
                mode: table
                position: bottom
                values:
                - last
              visual:
                areaOpacity: 0.5
                display: line
                lineWidth: 0.25
                palette:
                  mode: auto
              yAxis:
                format:
                  unit: seconds
          queries:
          - kind: TimeSeriesQuery
            spec:
              plugin:
                kind: PrometheusTimeSeriesQuery
                spec:
                  datasource:
                    kind: PrometheusDatasource
                    name: custom-datasource
                  query: go_gc_duration_seconds{job=~"$job",namespace="$namespace"}
                  seriesNameFormat: '{{quantile}} - {{pod}}'
    variables:
    - kind: ListVariable
      spec:
        allowAllValue: false
        allowMultiple: true
        display:
          hidden: false
          name: job
        name: job
        plugin:
          kind: PrometheusLabelValuesVariable
          spec:
            datasource:
              kind: PrometheusDatasource
              name: custom-datasource
            labelName: job
            matchers:
            - thanos_build_info{container="thanos-receive"}
    - kind: ListVariable
      spec:
        allowAllValue: false
        allowMultiple: false
        display:
          hidden: false
          name: namespace
        name: namespace
        plugin:
          kind: PrometheusLabelValuesVariable
          spec:
            datasource:
              kind: PrometheusDatasource
              name: custom-datasource
            labelName: namespace
            matchers:
            - thanos_status{}
    - kind: ListVariable
      spec:
        allowAllValue: false
        allowMultiple: true
        display:
          hidden: false
          name: tenant
        name: tenant
        plugin:
          kind: PrometheusLabelValuesVariable
          spec:
            datasource:
              kind: PrometheusDatasource
              name: custom-datasource
            labelName: tenant
            matchers:
            - prometheus_tsdb_head_max_time{container="thanos-receive",job="$job",namespace="$namespace"}
status: {}
