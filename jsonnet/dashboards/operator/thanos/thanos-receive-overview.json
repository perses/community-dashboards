{
  "kind": "PersesDashboard",
  "apiVersion": "perses.dev/v1alpha1",
  "metadata": {
    "name": "thanos-receive-overview",
    "namespace": "perses-dev",
    "creationTimestamp": null,
    "labels": {
      "app.kubernetes.io/component": "dashboard",
      "app.kubernetes.io/instance": "thanos-receive-overview",
      "app.kubernetes.io/name": "perses-dashboard",
      "app.kubernetes.io/part-of": "perses-operator"
    }
  },
  "spec": {
    "config": {
      "display": {
        "name": "Thanos / Receive / Overview"
      },
      "variables": [
        {
          "kind": "ListVariable",
          "spec": {
            "display": {
              "name": "job",
              "hidden": false
            },
            "allowAllValue": false,
            "allowMultiple": true,
            "plugin": {
              "kind": "PrometheusLabelValuesVariable",
              "spec": {
                "datasource": {
                  "kind": "PrometheusDatasource",
                  "name": "prometheus-datasource"
                },
                "labelName": "job",
                "matchers": [
                  "thanos_build_info{container=\"thanos-receive\"}"
                ]
              }
            },
            "name": "job"
          }
        },
        {
          "kind": "ListVariable",
          "spec": {
            "display": {
              "name": "namespace",
              "hidden": false
            },
            "allowAllValue": false,
            "allowMultiple": false,
            "plugin": {
              "kind": "PrometheusLabelValuesVariable",
              "spec": {
                "datasource": {
                  "kind": "PrometheusDatasource",
                  "name": "prometheus-datasource"
                },
                "labelName": "namespace",
                "matchers": [
                  "thanos_status{}"
                ]
              }
            },
            "name": "namespace"
          }
        },
        {
          "kind": "ListVariable",
          "spec": {
            "display": {
              "name": "tenant",
              "hidden": false
            },
            "allowAllValue": false,
            "allowMultiple": true,
            "plugin": {
              "kind": "PrometheusLabelValuesVariable",
              "spec": {
                "datasource": {
                  "kind": "PrometheusDatasource",
                  "name": "prometheus-datasource"
                },
                "labelName": "tenant",
                "matchers": [
                  "prometheus_tsdb_head_max_time{container=\"thanos-receive\",job=\"$job\",namespace=\"$namespace\"}"
                ]
              }
            },
            "name": "tenant"
          }
        }
      ],
      "panels": {
        "0_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Remote Write Rate",
              "description": "Shows rate of incoming Remote Write v1 requests."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, handler, code) (\n  rate(http_requests_total{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])\n)",
                      "seriesNameFormat": "{{job}} {{namespace}} {{handler}} {{code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "0_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Remote Write Errors",
              "description": "Shows percentage of errors for incoming Remote Write v1 requests."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "percent"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  (\n      sum by (namespace, job, code) (\n        rate(\n          http_requests_total{code=~\"5..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n        )\n      )\n    / ignoring (code) group_left ()\n      sum by (namespace, job) (\n        rate(http_requests_total{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])\n      )\n  )\n*\n  100",
                      "seriesNameFormat": "{{job}} {{namespace}} {{code}} {{handler}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "0_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Remote Write Duration",
              "description": "Duration percentiles of successful Remote Write requests."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.5,\n  sum by (namespace, job, le) (\n    rate(\n      http_request_duration_seconds_bucket{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p50 {{job}} - {{namespace}} duration"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.9,\n  sum by (namespace, job, le) (\n    rate(\n      http_request_duration_seconds_bucket{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p90 {{job}} - {{namespace}} duration"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.99,\n  sum by (namespace, job, le) (\n    rate(\n      http_request_duration_seconds_bucket{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p99 {{job}} {{namespace}} duration"
                    }
                  }
                }
              }
            ]
          }
        },
        "10_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Appended Samples",
              "description": "Shows rate of samples appended to Receive TSDB across all tenants."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (\n  rate(prometheus_tsdb_head_samples_appended_total{job=~\"$job\",namespace=~\"$namespace\"}[$__rate_interval])\n)",
                      "seriesNameFormat": "{{job}} - {{namespace}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "10_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Head Series",
              "description": "Shows number of series in Receive TSDB head across all tenants."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (prometheus_tsdb_head_series{job=~\"$job\",namespace=~\"$namespace\"})",
                      "seriesNameFormat": "{{job}} - {{namespace}} - Head Series"
                    }
                  }
                }
              }
            ]
          }
        },
        "10_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Head Chunks",
              "description": "Shows number of chunks in Prometheus TSDB head across all tenants."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (prometheus_tsdb_head_chunks{job=~\"$job\",namespace=~\"$namespace\"})",
                      "seriesNameFormat": "{{job}} - {{namespace}} - Head Chunks"
                    }
                  }
                }
              }
            ]
          }
        },
        "11_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "CPU Usage",
              "description": "Shows the CPU usage of the component."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table",
                  "values": [
                    "last"
                  ]
                },
                "yAxis": {
                  "format": {
                    "unit": "decimal"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "rate(process_cpu_seconds_total{job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])",
                      "seriesNameFormat": "{{pod}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "11_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Memory Usage",
              "description": "Shows various memory usage metrics of the component."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table",
                  "values": [
                    "last"
                  ]
                },
                "yAxis": {
                  "format": {
                    "unit": "bytes"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_memstats_alloc_bytes{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "Alloc All {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_memstats_heap_alloc_bytes{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "Alloc Heap {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "rate(go_memstats_alloc_bytes_total{job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])",
                      "seriesNameFormat": "Alloc Rate All {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "rate(go_memstats_heap_alloc_bytes{job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])",
                      "seriesNameFormat": "Alloc Rate Heap {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_memstats_stack_inuse_bytes{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "Inuse Stack {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_memstats_heap_inuse_bytes{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "Inuse Heap {{pod}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "process_resident_memory_bytes{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "Resident Memory {{pod}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "11_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Goroutines",
              "description": "Shows the number of goroutines being used by the component."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table",
                  "values": [
                    "last"
                  ]
                },
                "yAxis": {
                  "format": {
                    "unit": "decimal"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_goroutines{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "{{pod}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "11_3": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "GC Duration",
              "description": "Shows the Go garbage collection pause durations for the component."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table",
                  "values": [
                    "last"
                  ]
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "go_gc_duration_seconds{job=~\"$job\",namespace=\"$namespace\"}",
                      "seriesNameFormat": "{{quantile}} - {{pod}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "1_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Remote Write Rate by tenant",
              "description": "Shows rate of incoming Remote Write v1 requests split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (tenant, job, handler, code) (\n  rate(\n    http_requests_total{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{tenant}} {{code}} {{job}} {{namespace}} {{handler}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "1_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Remote Write Errors by tenant",
              "description": "Shows percentage of errors for incoming Remote Write v1 requests split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "percent"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  (\n      sum by (tenant, namespace, job, code) (\n        rate(\n          http_requests_total{code!~\"2..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n        )\n      )\n    / ignoring (code) group_left ()\n      sum by (tenant, namespace, job) (\n        rate(\n          http_requests_total{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n        )\n      )\n  )\n*\n  100",
                      "seriesNameFormat": "{{tenant}} {{code}} {{job}} {{namespace}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "1_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Average Remote Write Duration by tenant",
              "description": "Average duration of Remote Write requests by tenants."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, tenant) (\n    rate(\n      http_request_duration_seconds_sum{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n    )\n  )\n/\n  sum by (namespace, job, tenant) (\n    http_request_duration_seconds_count{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}\n  )",
                      "seriesNameFormat": "{{tenant}} {{namespace}} {{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "2_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Average Successful Remote Write request size",
              "description": "Shows average size of successful remote write request."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "bytes"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, tenant) (\n    rate(\n      http_request_size_bytes_sum{code=~\"2..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n    )\n  )\n/\n  sum by (namespace, job, tenant) (\n    rate(\n      http_request_size_bytes_count{code=~\"2..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n    )\n  )",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "2_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Average Failed Remote Write request size",
              "description": "Shows average size of failed remote write request."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "bytes"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, tenant) (\n    rate(\n      http_request_size_bytes_sum{code!~\"2..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n    )\n  )\n/\n  sum by (namespace, job, tenant) (\n    rate(\n      http_request_size_bytes_count{code!~\"2..\",handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n    )\n  )",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "2_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Inflight remote write requests",
              "description": "Shows inflight remote write HTTP requests."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "decimal"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, tenant, method) (\n  http_inflight_requests{handler=\"receive\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"tenant\"}\n)",
                      "seriesNameFormat": "{{method}} {{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "3_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of Series ingested",
              "description": "Shows rate of timeseries ingested by Receive, split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, tenant) (\n  rate(\n    thanos_receive_write_timeseries_sum{code=~\"2..\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "3_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of Series not ingested",
              "description": "Shows rate of timeseries not ingested by Receive, split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, tenant) (\n  rate(\n    thanos_receive_write_timeseries_sum{code!~\"2..\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "3_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of Samples ingested",
              "description": "Shows rate of samples ingested by Receive, split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, tenant) (\n  rate(\n    thanos_receive_write_samples_sum{code=~\"2..\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "3_3": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of Samples not ingested",
              "description": "Shows rate of samples not ingested by Receive, split by tenant."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, tenant) (\n  rate(\n    thanos_receive_write_samples_sum{code!~\"2..\",job=~\"$job\",namespace=\"$namespace\",tenant=~\"$tenant\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{tenant}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "4_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of replication requests",
              "description": "Shows rate of replication requests between Receives."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (\n  rate(thanos_receive_replications_total{job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])\n)",
                      "seriesNameFormat": "{{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "4_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of replication errors",
              "description": "Shows rate of replication errors between Receives."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (\n  rate(\n    thanos_receive_replications_total{job=~\"$job\",namespace=\"$namespace\",result=\"error\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "5_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of forward requests",
              "description": "Shows rate of forward requests between Receives."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (\n  rate(thanos_receive_forward_requests_total{job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval])\n)",
                      "seriesNameFormat": "{{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "5_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Rate of forward errors",
              "description": "Shows rate of forward errors between Receives."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "list"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job) (\n  rate(\n    thanos_receive_forward_requests_total{job=~\"$job\",namespace=\"$namespace\",result=\"error\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "6_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Write request rate",
              "description": "Shows rate of handled Unary gRPC Write requests (WritableStore)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, grpc_method, grpc_code) (\n  rate(\n    grpc_server_handled_total{grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "6_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Write error rate",
              "description": "Shows percentage of errors of Unary gRPC Write requests (WritableStore)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "percent"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, grpc_code) (\n    rate(\n      grpc_server_handled_total{grpc_code=~\"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss\",grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n/ ignoring (grpc_code) group_left ()\n  sum by (namespace, job) (\n    rate(\n      grpc_server_handled_total{grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "6_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Write duration",
              "description": "Shows duration percentiles of handled Unary gRPC Write requests (WritableStore)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.5,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p50 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.9,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p90 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.99,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p99 {{namespace}} {{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "7_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Read request rate",
              "description": "Shows rate of handled Unary gRPC Read requests (StoreAPI)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, grpc_method, grpc_code) (\n  rate(\n    grpc_server_handled_total{grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "7_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Read error rate",
              "description": "Shows percentage of errors of Unary gRPC Read requests (StoreAPI)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "percent"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, grpc_code) (\n    rate(\n      grpc_server_handled_total{grpc_code=~\"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss\",grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n/ ignoring (grpc_code) group_left ()\n  sum by (namespace, job) (\n    rate(\n      grpc_server_handled_total{grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "7_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Unary gRPC Read duration",
              "description": "Shows duration percentiles of handled Unary gRPC Read requests (StoreAPI)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.5,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p50 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.9,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p90 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.99,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_method!=\"RemoteWrite\",grpc_type=\"unary\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p99 {{namespace}} {{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "8_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Stream gRPC Read request rate",
              "description": "Shows rate of handled Stream gRPC Read requests (StoreAPI Series/Exemplar calls)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "requests/sec"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "sum by (namespace, job, grpc_method, grpc_code) (\n  rate(\n    grpc_server_handled_total{grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n  )\n)",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "8_1": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Stream gRPC Read error rate",
              "description": "Shows percentage of errors of Stream gRPC Read requests (StoreAPI Series/Exemplar calls)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "percent"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 1,
                  "palette": {
                    "mode": "auto"
                  },
                  "stack": "all"
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  sum by (namespace, job, grpc_code) (\n    rate(\n      grpc_server_handled_total{grpc_code=~\"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss\",grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n/ ignoring (grpc_code) group_left ()\n  sum by (namespace, job) (\n    rate(\n      grpc_server_handled_total{grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )",
                      "seriesNameFormat": "{{namespace}} {{job}} {{grpc_method}} {{grpc_code}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "8_2": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Stream gRPC Read duration",
              "description": "Shows duration percentiles of handled Stream gRPC Read requests (StoreAPI Series/Exemplar calls)."
            },
            "plugin": {
              "kind": "TimeSeriesChart",
              "spec": {
                "legend": {
                  "position": "bottom",
                  "mode": "table"
                },
                "yAxis": {
                  "format": {
                    "unit": "seconds"
                  }
                },
                "visual": {
                  "display": "line",
                  "lineWidth": 0.25,
                  "areaOpacity": 0.5,
                  "palette": {
                    "mode": "auto"
                  }
                }
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.5,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p50 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.9,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p90 {{namespace}} {{job}}"
                    }
                  }
                }
              },
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "histogram_quantile(\n  0.99,\n  sum by (namespace, job, le) (\n    rate(\n      grpc_server_handling_seconds_bucket{grpc_type=\"server_stream\",job=~\"$job\",namespace=\"$namespace\"}[$__rate_interval]\n    )\n  )\n)",
                      "seriesNameFormat": "p99 {{namespace}} {{job}}"
                    }
                  }
                }
              }
            ]
          }
        },
        "9_0": {
          "kind": "Panel",
          "spec": {
            "display": {
              "name": "Last Uploaded Block",
              "description": "Shows the last uploaded block time for Receive."
            },
            "plugin": {
              "kind": "Table",
              "spec": {
                "columnSettings": [
                  {
                    "name": "job",
                    "header": "Job"
                  },
                  {
                    "name": "bucket",
                    "header": "Bucket"
                  },
                  {
                    "name": "namespace",
                    "header": "Namespace"
                  },
                  {
                    "name": "value",
                    "header": "Uploaded Ago"
                  },
                  {
                    "name": "timestamp",
                    "hide": true
                  }
                ]
              }
            },
            "queries": [
              {
                "kind": "TimeSeriesQuery",
                "spec": {
                  "plugin": {
                    "kind": "PrometheusTimeSeriesQuery",
                    "spec": {
                      "datasource": {
                        "kind": "PrometheusDatasource",
                        "name": "prometheus-datasource"
                      },
                      "query": "  time()\n-\n  max by (namespace, job, bucket) (\n    thanos_objstore_bucket_last_successful_upload_time{job=~\"$job\",namespace=\"$namespace\"}\n  )"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "layouts": [
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Remote Write v1 - Incoming Requests"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/0_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/0_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/0_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Remote Write v1 - Incoming Requests (tenanted)"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/1_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/1_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/1_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Remote Write v1 - HTTP Requests"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/2_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/2_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/2_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Series and Samples (tenanted)"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 6,
                "height": 6,
                "content": {
                  "$ref": "#/spec/panels/3_0"
                }
              },
              {
                "x": 6,
                "y": 0,
                "width": 6,
                "height": 6,
                "content": {
                  "$ref": "#/spec/panels/3_1"
                }
              },
              {
                "x": 12,
                "y": 0,
                "width": 6,
                "height": 6,
                "content": {
                  "$ref": "#/spec/panels/3_2"
                }
              },
              {
                "x": 18,
                "y": 0,
                "width": 6,
                "height": 6,
                "content": {
                  "$ref": "#/spec/panels/3_3"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Remote Write Replication"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 12,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/4_0"
                }
              },
              {
                "x": 12,
                "y": 0,
                "width": 12,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/4_1"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Remote Write Forward"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 12,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/5_0"
                }
              },
              {
                "x": 12,
                "y": 0,
                "width": 12,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/5_1"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Write gRPC Unary (WritableStore)"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/6_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/6_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/6_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Read gRPC Unary (StoreAPI Info/Labels)"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/7_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/7_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/7_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Read gRPC Stream (StoreAPI Series/Exemplars)"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/8_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/8_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/8_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Last Bucket Upload"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 24,
                "height": 6,
                "content": {
                  "$ref": "#/spec/panels/9_0"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Storage"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/10_0"
                }
              },
              {
                "x": 8,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/10_1"
                }
              },
              {
                "x": 16,
                "y": 0,
                "width": 8,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/10_2"
                }
              }
            ]
          }
        },
        {
          "kind": "Grid",
          "spec": {
            "display": {
              "title": "Resources"
            },
            "items": [
              {
                "x": 0,
                "y": 0,
                "width": 6,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/11_0"
                }
              },
              {
                "x": 6,
                "y": 0,
                "width": 6,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/11_1"
                }
              },
              {
                "x": 12,
                "y": 0,
                "width": 6,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/11_2"
                }
              },
              {
                "x": 18,
                "y": 0,
                "width": 6,
                "height": 8,
                "content": {
                  "$ref": "#/spec/panels/11_3"
                }
              }
            ]
          }
        }
      ],
      "duration": "1h"
    }
  },
  "status": {}
}